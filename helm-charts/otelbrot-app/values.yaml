# Default values for otelbrot-app
# This is a YAML-formatted file.

nameOverride: ""
fullnameOverride: ""

# Ingress configuration for service access
ingress:
  enabled: true
  className: "nginx"
  frontendHost: "otelbrot.local"
  metricsHost: "metrics.otelbrot.local"
  annotations:
    # SPA-friendly settings for nginx-ingress
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
    # Don't use path rewrites for SPAs
    nginx.ingress.kubernetes.io/use-regex: "false"
    # Uncomment to enable sticky sessions if needed
    # nginx.ingress.kubernetes.io/affinity: "cookie"
    # nginx.ingress.kubernetes.io/session-cookie-name: "route"
    # nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    # nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
  tls: []
  # - secretName: otelbrot-tls
  #   hosts:
  #     - otelbrot.local
  #     - metrics.otelbrot.local

# OTEL-LGTM all-in-one monitoring container
otelLgtm:
  enabled: true
  image:
    repository: grafana/otel-lgtm
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      otelGrpc:
        port: 4317
      otelHttp:
        port: 4318
      grafana:
        port: 3000
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 2Gi
  persistence:
    enabled: true
    size: 10Gi
    accessMode: ReadWriteOnce
    storageClass: ""

redis:
  enabled: true
  image:
    repository: redis
    tag: alpine
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 6379
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

orchestrator:
  image:
    repository: otelbrot/orchestrator
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8080
  updateStrategy:
    type: RollingUpdate
    maxUnavailable: 0
    maxSurge: 1
  resources:
    limits:
      cpu: 1000m
      memory: 768Mi
    requests:
      cpu: 500m
      memory: 512Mi
  env:
    - name: SPRING_DATA_REDIS_HOST
      value: "redis"
    - name: SPRING_DATA_REDIS_PORT
      value: "6379"
    - name: SPRING_PROFILES_ACTIVE
      value: "dev"
    - name: OTEL_SERVICE_NAME
      value: "otelbrot-orchestrator"
    - name: OTEL_EXPERIMENTAL_CONFIG_FILE
      value: "/etc/otel/otel-agent-config.yaml"
    # Set logging levels to reduce noise
    - name: LOGGING_LEVEL_ROOT
      value: "INFO"
    - name: LOGGING_LEVEL_IO_APARKER_OTELBROT_ORCHESTRATOR_SERVICE_ORCHESTRATIONSERVICE
      value: "WARN"
    - name: LOGGING_LEVEL_IO_APARKER_OTELBROT_ORCHESTRATOR_CONTROLLER
      value: "INFO"
    - name: LOGGING_LEVEL_IO_APARKER_OTELBROT_ORCHESTRATOR_WEBSOCKET
      value: "INFO"
    # Redis configuration  
    - name: APP_REDIS_STREAM_READ_TIMEOUT
      value: "5"

frontend:
  image:
    repository: otelbrot/frontend
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  updateStrategy:
    type: RollingUpdate
    maxUnavailable: 0
    maxSurge: 1
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  env:
    - name: ORCHESTRATOR_URL
      value: "http://orchestrator:8080"

collector:
  mode: deployment
  replicas: 2
  serviceAccount: otelbrot-collector
  image:
    repository: otel/opentelemetry-collector-contrib
    tag: "0.121.0"
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 200Mi
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s
      resource:
        attributes:
          cluster_name: otelbrot
    exporters:
      debug:
        verbosity: normal
  service:
    type: ClusterIP
    ports:
      otlp:
        port: 4317
      otlp_http:
        port: 4318
      metrics:
        port: 8888

