apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: {{ .Release.Namespace }}
  labels:
    app: frontend
spec:
  replicas: 1
  strategy:
    type: {{ .Values.frontend.updateStrategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.frontend.updateStrategy.maxUnavailable }}
      maxSurge: {{ .Values.frontend.updateStrategy.maxSurge }}
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        rollme: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}-{{ .Release.Revision }}"
        checksum/config: {{ include (print $.Template.BasePath "/configmaps/go-worker-otel-config.yaml") . | sha256sum }}
        helm.sh/revision: "{{ .Release.Revision }}"
        helm.sh/release-time: "{{ now | date "20060102150405" }}"
    spec:
      containers:
      - name: frontend
        image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}
        imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
        ports:
        - containerPort: 80
        env:
{{ toYaml .Values.frontend.env | indent 8 }}
        resources:
{{ toYaml .Values.frontend.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          timeoutSeconds: 2
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 20
          timeoutSeconds: 2
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: {{ .Release.Namespace }}
  labels:
    app: frontend
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
  - port: {{ .Values.frontend.service.port }}
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: frontend
