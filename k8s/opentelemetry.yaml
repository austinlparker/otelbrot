apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: otelbrot
spec:
  mode: "daemonset"  # Running as DaemonSet for host metrics collection
  serviceAccount: otel-collector
  image: otel/opentelemetry-collector-k8s
  volumeMounts:
    - name: hostfs
      mountPath: /hostfs
      readOnly: true
      mountPropagation: HostToContainer
  volumes:
    - name: hostfs
      emptyDir: {}
  env:
    - name: HONEYCOMB_API_KEY
      valueFrom:
        secretKeyRef:
          name: honeycomb-api-key
          key: api-key
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      kubeletstats:
        collection_interval: 60s
        auth_type: "serviceAccount"
        endpoint: "${K8S_NODE_NAME}:10250"
        insecure_skip_verify: true

    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
      resource:
        attributes:
          - key: k8s.cluster.name
            value: "otelbrot"
            action: upsert

    exporters:
      debug: {}
      otlp/honeycomb:
        endpoint: api.honeycomb.io:443
        headers:
          x-honeycomb-team: ${HONEYCOMB_API_KEY}
      otlphttp/lgtm:
        endpoint: http://otel-lgtm:4318
        tls:
          insecure: true

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [debug, otlphttp/lgtm, otlp/honeycomb]
        metrics:
          receivers: [otlp, kubeletstats]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [debug, otlphttp/lgtm, otlp/honeycomb]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [debug, otlphttp/lgtm, otlp/honeycomb]
---
apiVersion: opentelemetry.io/v1alpha1
kind: Instrumentation
metadata:
  name: java-agent
  namespace: otelbrot
spec:
  exporter:
    endpoint: http://otel-collector:4318
  propagators:
    - tracecontext
    - baggage
  sampler:
    type: parentbased_traceidratio
    argument: "1"
  java:
    image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java:2.13.2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector
  namespace: otelbrot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/stats
  - nodes/metrics
  - services
  - endpoints
  - pods
  - namespaces
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - deployments
  - replicasets
  - statefulsets
  - daemonsets
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otel-collector
subjects:
- kind: ServiceAccount
  name: otel-collector
  namespace: otelbrot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-lgtm
  namespace: otelbrot
spec:
  selector:
    matchLabels:
      app: otel-lgtm
  replicas: 1
  template:
    metadata:
      labels:
        app: otel-lgtm
    spec:
      containers:
      - name: otel-lgtm
        image: grafana/otel-lgtm:latest
        ports:
        - name: grafana
          containerPort: 3000
        - name: otlp-http
          containerPort: 4318
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        env:
        - name: GRAFANA_ADMIN_PASSWORD
          value: "admin"
        - name: GRAFANA_ADMIN_USER
          value: "admin"
---
apiVersion: v1
kind: Service
metadata:
  name: otel-lgtm
  namespace: otelbrot
spec:
  selector:
    app: otel-lgtm
  ports:
  - name: grafana
    port: 3000
    targetPort: grafana
  - name: otlp-http
    port: 4318
    targetPort: otlp-http
  type: ClusterIP